Position		Type			Value			Text

(1, 1)			RELOP_EQ			==				  ==
(1, 4)			RELOP_GE			>=				  >=
(1, 7)			RELOP_LE			<=				  <=
(1, 10)			RELOP_LT			<				  <
(1, 12)			RELOP_GT			>				  >
(1, 14)			RELOP_NE			!=				  !=
(2, 1)			BITWISE_LSHIFT			<<				  <<
(2, 4)			BITWISE_RSHIFT			>>				  >>
(2, 7)			BITWISE_NOT			~				  ~
(2, 9)			BITWISE_XOR			^				  ^
(2, 11)			BITWISE_OR			|				  |
(2, 13)			BITWISE_AND			&				  &
(3, 1)			LOGIC_AND			&&				  &&
(3, 4)			LOBIC_OR			||				  ||
(3, 7)			LOGIC_NO			!				  !
(4, 1)			LSQUARE_BRACKET			[				  [
(4, 2)			RSQUARE_BRACKET			]				  ]
(4, 4)			LCURLY_BRACKET			{				  {
(4, 6)			RCURLY_BRACKET			}				  }
(4, 8)			LBRACKET			(				  (
(4, 13)			RBRACKET			)				  )
(5, 1)			PLUS			+				  +
(5, 3)			MINUS			-				  -
(5, 5)			DOUBLE_PLUS			++				  ++
(5, 8)			DOUBLE_MINUS			--				  --
(5, 11)			ASTERIX			*				  *
(5, 13)			FORWARD_SLASH			/				  /
(5, 15)			REMINDER			%				  %
(6, 1)			ARROW			->				  ->
(6, 4)			DOT			.				  .
(6, 6)			COMMA			,				  ,
(7, 1)			ASSIGNMENT_BY_SUM			+=				  +=
(7, 4)			ASSIGNMENT_BY_DIFFERENCE			-=				  -=
(7, 7)			ASSIGNMENT_BY_PRODUCT			*=				  *=
(7, 10)			ASSIGNMENT_BY_QUOTIENT			/=				  /=
(7, 13)			ASSIGNMENT_BY_REMINDER			%=				  %=
(7, 16)			ASSIGNMENT_BY_BITWISE_LSHIFT			<<=				  <<=
(7, 20)			ASSIGNMENT_BY_BITWISE_RSHIFT			>>=				  >>=
(7, 24)			ASSIGNMENT_BY_BITWISE_XOR			^=				  ^=
(7, 27)			ASSIGNMENT_BY_BITWISE_OR			|=				  |=
(7, 30)			ASSIGNMENT_BY_BITWISE_XOR			^=				  ^=
(8, 1)			QUESTION_MARK			?				  ?
(8, 3)			COLON			:				  :
(9, 1)			ASSIGNMENT			=				  =
