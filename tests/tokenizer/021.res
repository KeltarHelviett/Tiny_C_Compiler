Position		Type			Value			Text

(1, 1)			RELOP_EQ			==				  ==
(1, 4)			RELOP_GE			>=				  >=
(1, 7)			RELOP_LE			<=				  <=
(1, 10)			RELOP_LT			<				  <
(1, 12)			RELOP_GT			>				  >
(1, 14)			RELOP_NE			!=				  !=
(2, 1)			BITWISE_LSHIFT			<<				  <<
(2, 4)			BITWISE_RSHIFT			>>				  >>
(2, 7)			BITWISE_NOT			~				  ~
(2, 9)			BITWISE_XOR			^				  ^
(2, 11)			BITWISE_OR			|				  |
(2, 13)			BITWISE_AND			&				  &
(2, 17)			LOGIC_AND			&&				  &&
(2, 20)			LOBIC_OR			||				  ||
(2, 23)			LOGIC_NO			!				  !
(2, 27)			LSQUARE_BRACKET			[				  [
(2, 28)			RSQUARE_BRACKET			]				  ]
(2, 30)			LCURLY_BRACKET			{				  {
(2, 32)			RCURLY_BRACKET			}				  }
(2, 34)			LBRACKET			(				  (
(2, 39)			RBRACKET			)				  )
(2, 43)			PLUS			+				  +
(2, 45)			MINUS			-				  -
(2, 47)			DOUBLE_PLUS			++				  ++
(2, 50)			DOUBLE_MINUS			--				  --
(2, 53)			ASTERIX			*				  *
(2, 55)			FORWARD_SLASH			/				  /
(2, 57)			REMINDER			%				  %
(2, 61)			ARROW			->				  ->
(2, 64)			DOT			.				  .
(2, 66)			COMMA			,				  ,
(3, 1)			ASSIGNMENT_BY_SUM			+=				  +=
(3, 4)			ASSIGNMENT_BY_DIFFERENCE			-=				  -=
(3, 7)			ASSIGNMENT_BY_PRODUCT			*=				  *=
(3, 10)			ASSIGNMENT_BY_QUOTIENT			/=				  /=
(3, 13)			ASSIGNMENT_BY_REMINDER			%=				  %=
(3, 16)			ASSIGNMENT_BY_BITWISE_LSHIFT			<<=				  <<=
(3, 20)			ASSIGNMENT_BY_BITWISE_RSHIFT			>>=				  >>=
(3, 24)			ASSIGNMENT_BY_BITWISE_XOR			^=				  ^=
(3, 27)			ASSIGNMENT_BY_BITWISE_OR			|=				  |=
(3, 30)			ASSIGNMENT_BY_BITWISE_XOR			^=				  ^=
(3, 35)			QUESTION_MARK			?				  ?
(3, 37)			COLON			:				  :
(3, 41)			ASSIGNMENT			=				  =
